cmake_minimum_required(VERSION 3.15)

set(PROJECT_VERSION_MAJOR 0)
set(PROJECT_VERSION_MINOR 4)
set(PROJECT_VERSION_PATCH 0)
set (PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}")
if(PROJECT_VERSION_PATCH GREATER 0)
  set (PROJECT_VERSION "${PROJECT_VERSION}.${PROJECT_VERSION_PATCH}")
endif ()

project(SARibbon VERSION ${PROJECT_VERSION} LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "add a postfix, usually d on windows")
set(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
set(CMAKE_RELWITHDEBINFO_POSTFIX "rd" CACHE STRING "add a postfix, usually empty on windows")
set(CMAKE_MINSIZEREL_POSTFIX "s" CACHE STRING "add a postfix, usually empty on windows")
if(MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4819")
endif()

include(CPack)


message(STATUS "SARibbon ${PROJECT_VERSION}")
find_package(Qt6 COMPONENTS Core Widgets Gui)
if (NOT Qt6_FOUND)
    message(STATUS "Qt6 Not Found,Start Load Qt5")
    find_package(Qt5 REQUIRED COMPONENTS Core Widgets Gui)
    if(NOT Qt5_FOUND)
        message(FATAL_ERROR "Qt5 Not Found")
    else()
        message(STATUS "Success Load Qt5")
        set(SARIBBON_QT_VERSION 5)
    endif()
else()
    message(STATUS "Success Load Qt6")
    set(SARIBBON_QT_VERSION 6)
endif()

option(BUILD_EXAMPLES "build the examples" ON)
option(BUILD_SHARED_LIBS "build the SARibbonBar in shared lib mode" ON)
option(BUILD_DESIGNERPLUGIN "build the Designer Plugin" OFF)

include(cmake/WinResource.cmake)
add_subdirectory(src)
add_subdirectory(cmake)
